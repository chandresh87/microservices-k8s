buildscript {
	ext {
		springBootVersion = '2.1.7.RELEASE'
	}
	repositories {
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'se.transmode.gradle:gradle-docker:1.2'
		 classpath "com.commercehub.gradle.plugin:gradle-avro-plugin:0.9.1"
	}
}

plugins {
	id 'net.ltgt.apt' version '0.10'
	id 'io.spring.dependency-management' version '1.0.7.RELEASE'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'
apply plugin: "com.commercehub.gradle.plugin.avro"

group = 'microservice-k8s'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


ext {
	set('springCloudVersion', "Greenwich.SR2")
}

compileJava {
    options.annotationProcessorPath = configurations.annotationProcessor
    options.compilerArgs << "-Amapstruct.defaultComponentModel=spring" 
    options.setAnnotationProcessorGeneratedSourcesDirectory( file("${buildDir}/generated/source/apt/main"))
}

task generateAvro(type: com.commercehub.gradle.plugin.avro.GenerateAvroJavaTask) {
    source("src/main/resources/avro")
    outputDir = file("${buildDir}/generated/source/apt/main")
    fieldVisibility = "PRIVATE"
    outputCharacterEncoding = "UTF-8"
}

dependencies {

	compile('org.springframework.cloud:spring-cloud-starter')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
	// 
	compile "org.springframework.security:spring-security-rsa"
	compile "org.springframework.boot:spring-boot-starter-actuator"
	
	runtime('mysql:mysql-connector-java')
	//Mapper
     annotationProcessor  group: 'org.mapstruct', name: 'mapstruct-processor', version: '1.3.0.Final'
     implementation "org.mapstruct:mapstruct:1.3.0.Final"
	
	testCompile('org.springframework.boot:spring-boot-starter-test')
	
	//Sleuth
	//zipkin
	compile 'org.springframework.cloud:spring-cloud-starter-zipkin'

	//Spring cloud Stream JMS
	compile 'org.springframework.cloud:spring-cloud-stream'
	compile 'org.springframework.cloud:spring-cloud-starter-stream-rabbit'
	compile('org.springframework.cloud:spring-cloud-stream-schema')
	
	//OAuth 2
	compile('org.springframework.cloud:spring-cloud-starter-oauth2')
	compile "org.springframework.security:spring-security-jwt"
	compile "org.springframework.cloud:spring-cloud-security"
	compile group: 'commons-io', name: 'commons-io', version: '2.6'
	
	//chaos-monkey
	//compile "de.codecentric:chaos-monkey-spring-boot:2.1.1"
	
	//Kubernetes
	compile "org.springframework.cloud:spring-cloud-starter-kubernetes-all"
}

docker {
    maintainer = 'chandresh.mishra <chandresh87@gmail.com>'
    
}

task buildDocker(type: Docker, dependsOn: build) {
  //push = true
  applicationName = 'organizationmicroservice-k8s'
  tagVersion = '1.1'
  dockerfile = file("${buildDir}/docker/Dockerfile")
  doFirst {
    copy {
      from jar
      into stageDir
      from "src/main/docker/"
      into "${buildDir}/docker"
    }
  }
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
